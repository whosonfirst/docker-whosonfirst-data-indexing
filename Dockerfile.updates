# https://github.com/whosonfirst/docker-whosonfirst-data-indexing/issues/4
# https://github.com/aaronland/go-aws-ecs/issues/2
#
# This could easily have been built as a Lambda function to launch ECS tasks
# but since, in the near-future, we will want to be able to launch tasks with
# the ability to wait until they are completed that means we'll inevitably
# exceed the maximum Lambda exection time so it's easier just to assume a long
# running container from the start.

# https://github.com/whosonfirst/go-whosonfirst-github
# https://github.com/aaronland/go-aws-ecs

# first build Go tools

FROM golang:1.17-alpine as gotools

RUN mkdir /build

RUN apk update && apk upgrade \
    && apk add git make gcc libc-dev \
    #
    && cd /build \
    && git clone https://github.com/whosonfirst/go-whosonfirst-github.git \
    && cd go-whosonfirst-github \
    && go build -mod vendor -o /usr/local/bin/wof-clone-repos cmd/wof-clone-repos/main.go \
    && go build -mod vendor -o /usr/local/bin/wof-list-repos cmd/wof-list-repos/main.go \           
    #
    && cd /build \
    && git clone https://github.com/aaronland/go-aws-ecs.git \
    && cd go-aws-ecs \       	
    && go build -mod vendor -o /usr/local/bin/ecs-launch-task cmd/ecs-launch-task/main.go \
    #
    && cd && rm -rf /build 
    
FROM alpine

RUN mkdir /usr/local/data

RUN apk update && apk upgrade \
    && apk add python3 ca-certificates 

COPY --from=gotools /usr/local/bin/wof-list-repos /usr/bin
COPY --from=gotools /usr/local/bin/ecs-launch-task /usr/bin

COPY bin/update.sh /usr/local/bin/
COPY bin/update.sh.env /usr/local/bin/