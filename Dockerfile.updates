# Dockerfile to build a container used to determine all the `whosonfirst-data` repositories
# that have been updated since a specific time and then, for each repository, launch an ECS
# task to index that repository in zero or more targets using the `updated.sh` tool. This tool
# is configured by the use of a `update.sh.env` file. Both files are expected to be found in the
# `bin` folder of this repository and are copied to the final container.

# Note that equivalent functionality is provided by the `update/cmd/update` tool which can
# either be run from the command line or as a Lambda function. This may be easier and/or cheaper
# than spinning up entire ECS instances to check for changes and invoking subsequent ECS tasks.

# https://github.com/whosonfirst/go-whosonfirst-github
# https://github.com/aaronland/go-aws-ecs

# first build Go tools

FROM golang:1.20-alpine as gotools

RUN mkdir /build

RUN apk update && apk upgrade \
    && apk add git make gcc libc-dev \
    #
    && cd /build \
    && git clone https://github.com/whosonfirst/go-whosonfirst-github.git \
    && cd go-whosonfirst-github \
    && go build -mod vendor -ldflags="-s -w" -o /usr/local/bin/wof-clone-repos cmd/wof-clone-repos/main.go \
    && go build -mod vendor -ldflags="-s -w" -o /usr/local/bin/wof-list-repos cmd/wof-list-repos/main.go \           
    #
    && cd /build \
    && git clone https://github.com/aaronland/go-aws-ecs.git \
    && cd go-aws-ecs \       	
    && go build -mod vendor -ldflags="-s -w" -o /usr/local/bin/ecs-launch-task cmd/ecs-launch-task/main.go \
    #
    && cd && rm -rf /build 
    
FROM alpine

RUN mkdir /usr/local/data

RUN apk update && apk upgrade \
    && apk add python3 ca-certificates 

COPY --from=gotools /usr/local/bin/wof-list-repos /usr/bin
COPY --from=gotools /usr/local/bin/ecs-launch-task /usr/bin

COPY bin/update.sh /usr/local/bin/
COPY bin/update.sh.env /usr/local/bin/
